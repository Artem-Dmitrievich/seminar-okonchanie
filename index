# Основные команды GIT


## Инициализация нового репозитория


Откройте консоль MINGw, Войдите в папку с файлами проекта и наберите комманду

    git init


## Добавление файла в коммит


создайте файл с нужным содержимым и введите команду

    git add <filename>


## Синтаксис языка Markdown


1. Жирный текст - **
2. Курсивный текст - *
3. Зачеркнутый текст - ~
4. Выделяют заголовки - # в начале строки
5. Нумерованные Списки —
обозначаются обычными
цифрами 1, 2, 3 
6. Ненумерованные Списки —
обозначаются знаками *
в начале строки

## Команды для работы в GIT

* git log - журнал изменений
* git checkout - перейти к какой либо версии или сохранению
* git init - инициализация в репозиторий
* git commit -m"" - указать сообщение, чтобы вы хотели сказать к сохранению
* git status - название говорит само за себя
* git add - добавление

## Важное примечание к работе с Git-ом

*Git следит за файлами по именам. Если у нас нет файла с одн. названием, то Git будет считать что он удален и будет появляться новый файл.*

## Разрывы строк

**Чтобы создать разрыв строки или новую строку, завершите строку двумя или более пробелами, а затем введите return.**


## Добавление картинок

Чтобы вставить картинку в текст надо написать следующее:

*! - сначала указываем восклицательный знак*

*() - указываем имя файла, откуда достаем изображение*

*[] - Указываем текст при ошибки загрузки изображения*

![Впереди долгий путь!](Путь.jpg)


## Коммит изменений

После добавления всех файлов в коммит нужно ввести команду

    git commit -m "<commit message>"


## Создание новой ветки

для создания новой ветки введите команду

    git branch <branch name>


## Слияние веток


Для слияние текущей ветки с другой веткой нужно ввести команду

    git merge <branch name>


## Перенос изменений из данной ветки наверх текущей ветки

Для такого переноса нужно перейти на ветку, куда переносим изменения (например master) и вызвать команду

    git rebase <branch to rebase>

## Выполнение ДЗ(2)


Просто делаю действия для выполнения дз


## Проверка знаний и усвоение ДЗ


Просто выполняю домашнее задание для усвоения темы


## Команды и последовательность работы между Гитом и Гитхабом


1. Создать аккаунт на **Github.com**

2. Создать локальный репозиторий

3. "Синхронизация возникновения и удаленного репозитория. Github при создании нового репозитория подсказывает, как это сделать.

4. Отправляем **(push)** ваш локальный репозиторий в удаленный (на Github), при этом вам, возможно, необходимо будет авторизоваться на удаленном репозитории.

5. Провести изменения "С другой компа или гитхабе". Выкачать актуальное состояние из удаленного репозитория. Команда **(Pull)**


# Заключение

Спасибо большое за такой хороший проведенный курс по этой теме. Все было очень познавательно и детально.

## Клонирование

Для клонирования репозитория нужно ввести команду

    git clone <url to repository>
    
## Сброс изменений

Для сброса изменений в текущей ветке введите команду:

    git reset <commit hash>